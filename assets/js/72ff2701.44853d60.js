"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[301],{8215:function(e,t,n){var o=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,s=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:s},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return p}});var o=n(7462),s=n(7294),r=n(2389),a=n(9443);var l=function(){var e=(0,s.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(9521),i=n(6010),d="tabItem_1uMI";function c(e){var t,n,o,r=e.lazy,a=e.block,c=e.defaultValue,p=e.values,m=e.groupId,T=e.className,f=s.Children.map(e.children,(function(e){if((0,s.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=p?p:f.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),y=(0,u.lx)(k,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===c?c:null!=(t=null!=c?c:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(o=f[0])?void 0:o.props.value;if(null!==h&&!k.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=l(),g=v.tabGroupChoices,b=v.setTabGroupChoices,x=(0,s.useState)(h),S=x[0],j=x[1],N=[],D=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var C=g[m];null!=C&&C!==S&&k.some((function(e){return e.value===C}))&&j(C)}var I=function(e){var t=e.currentTarget,n=N.indexOf(t),o=k[n].value;o!==S&&(D(t),j(o),null!=m&&b(m,o))},w=function(e){var t,n=null;switch(e.key){case"ArrowRight":var o=N.indexOf(e.currentTarget)+1;n=N[o]||N[0];break;case"ArrowLeft":var s=N.indexOf(e.currentTarget)-1;n=N[s]||N[N.length-1]}null==(t=n)||t.focus()};return s.createElement("div",{className:"tabs-container"},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},T)},k.map((function(e){var t=e.value,n=e.label;return s.createElement("li",{role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,className:(0,i.Z)("tabs__item",d,{"tabs__item--active":S===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:w,onFocus:I,onClick:I},null!=n?n:t)}))),r?(0,s.cloneElement)(f.filter((function(e){return e.props.value===S}))[0],{className:"margin-vert--md"}):s.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==S})}))))}function p(e){var t=(0,r.Z)();return s.createElement(c,(0,o.Z)({key:String(t)},e))}},7948:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return p},default:function(){return T}});var o=n(7462),s=n(3366),r=(n(7294),n(3905)),a=n(6396),l=n(8215),u=["components"],i={id:"tutorial-03",title:"Tutorial with createContainer - ToDo App with useState",sidebar_label:"ToDo App (useState+Immer)"},d=void 0,c={unversionedId:"tutorial-03",id:"tutorial-03",isDocsHomePage:!1,title:"Tutorial with createContainer - ToDo App with useState",description:"This tutorial shows example code with useState, Immer and custom hooks.",source:"@site/docs/tutorial-03.md",sourceDirName:".",slug:"/tutorial-03",permalink:"/docs/tutorial-03",tags:[],version:"current",frontMatter:{id:"tutorial-03",title:"Tutorial with createContainer - ToDo App with useState",sidebar_label:"ToDo App (useState+Immer)"},sidebar:"docs",previous:{title:"ToDo App (useReducer)",permalink:"/docs/tutorial-02"},next:{title:"ToDo App (async)",permalink:"/docs/tutorial-04"}},p=[{value:"src/components/App.js",id:"srccomponentsappjs",children:[],level:2},{value:"src/store.js",id:"srcstorejs",children:[],level:2},{value:"src/hooks/useTodoList.js",id:"srchooksusetodolistjs",children:[],level:2},{value:"src/hooks/useAddTodo.js",id:"srchooksuseaddtodojs",children:[],level:2},{value:"src/hooks/useDeleteTodo.js",id:"srchooksusedeletetodojs",children:[],level:2},{value:"src/hooks/useToogleTodo.js",id:"srchooksusetoogletodojs",children:[],level:2},{value:"src/hooks/useQuery.js",id:"srchooksusequeryjs",children:[],level:2},{value:"src/components/TodoList.js",id:"srccomponentstodolistjs",children:[],level:2},{value:"src/components/TodoItem.js",id:"srccomponentstodoitemjs",children:[],level:2},{value:"src/components/NewTodo.js",id:"srccomponentsnewtodojs",children:[],level:2},{value:"src/utils.js",id:"srcutilsjs",children:[],level:2},{value:"CodeSandbox",id:"codesandbox",children:[],level:2}],m={toc:p};function T(e){var t=e.components,n=(0,s.Z)(e,u);return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This tutorial shows example code with useState, ",(0,r.kt)("a",{parentName:"p",href:"https://immerjs.github.io/immer/"},"Immer")," and custom hooks."),(0,r.kt)("h2",{id:"srccomponentsappjs"},"src/components/App.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import React from 'react';\n\nimport { Provider } from '../store';\nimport TodoList from './TodoList';\n\nconst App = () => (\n  <Provider>\n    <TodoList />\n  </Provider>\n);\n\nexport default App;\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react';\n\nimport { Provider } from '../store';\nimport TodoList from './TodoList';\n\nconst App: React.FC = () => (\n  <Provider>\n    <TodoList />\n  </Provider>\n);\n\nexport default App;\n\n")))),(0,r.kt)("p",null,"This is the root component.\nIt wraps TodoList with Provider."),(0,r.kt)("h2",{id:"srcstorejs"},"src/store.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useState, useCallback } from 'react';\nimport { createContainer } from 'react-tracked';\nimport produce from 'immer';\n\nconst initialState = {\n  todos: [\n    { id: 1, title: 'Wash dishes' },\n    { id: 2, title: 'Study JS' },\n    { id: 3, title: 'Buy ticket' },\n  ],\n  query: '',\n};\n\nconst useValue = () => useState(initialState);\n\nconst {\n  Provider,\n  useTrackedState,\n  useUpdate: useSetState,\n} = createContainer(useValue);\n\nconst useSetDraft = () => {\n  const setState = useSetState();\n  return useCallback(\n    (draftUpdater) => {\n      setState(produce(draftUpdater));\n    },\n    [setState],\n  );\n};\n\nexport { Provider, useTrackedState, useSetDraft };\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useState, useCallback } from 'react';\nimport { createContainer } from 'react-tracked';\nimport produce, { Draft } from 'immer';\n\ntype TodoType = {\n  id: number;\n  title: string;\n  completed?: boolean;\n};\n\nexport type State = {\n  todos: TodoType[];\n  query: string;\n};\n\nconst initialState: State = {\n  todos: [\n    { id: 1, title: 'Wash dishes' },\n    { id: 2, title: 'Study JS' },\n    { id: 3, title: 'Buy ticket' },\n  ],\n  query: '',\n};\n\nconst useValue = () => useState(initialState);\n\nconst {\n  Provider,\n  useTrackedState,\n  useUpdate: useSetState,\n} = createContainer(useValue);\n\nconst useSetDraft = () => {\n  const setState = useSetState();\n  return useCallback(\n    (draftUpdater: (draft: Draft<State>) => void) => {\n      setState(produce(draftUpdater));\n    },\n    [setState],\n  );\n};\n\nexport { Provider, useTrackedState, useSetDraft };\n\n")))),(0,r.kt)("p",null,"The store is created by useState.\nuseUpdate is renamed to useSetState,\nand based on it, useSetDraft with Immer is exported."),(0,r.kt)("h2",{id:"srchooksusetodolistjs"},"src/hooks/useTodoList.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useTrackedState } from '../store';\n\nexport const useTodoList = () => {\n  const state = useTrackedState();\n  return state.todos;\n};\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useTrackedState } from '../store';\n\nexport const useTodoList = () => {\n  const state = useTrackedState();\n  return state.todos;\n};\n\n")))),(0,r.kt)("p",null,"This is a custom hook to simply return ",(0,r.kt)("inlineCode",{parentName:"p"},"todos"),"."),(0,r.kt)("h2",{id:"srchooksuseaddtodojs"},"src/hooks/useAddTodo.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nlet nextId = 100;\n\nexport const useAddTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (title) => {\n      setDraft((draft) => {\n        draft.todos.push({ id: nextId++, title });\n      });\n    },\n    [setDraft],\n  );\n};\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nlet nextId = 100;\n\nexport const useAddTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (title) => {\n      setDraft((draft) => {\n        draft.todos.push({ id: nextId++, title });\n      });\n    },\n    [setDraft],\n  );\n};\n\n")))),(0,r.kt)("p",null,"This is a custom hook to return ",(0,r.kt)("inlineCode",{parentName:"p"},"addTodo")," function."),(0,r.kt)("h2",{id:"srchooksusedeletetodojs"},"src/hooks/useDeleteTodo.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nexport const useDeleteTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id) => {\n      setDraft((draft) => {\n        const index = draft.todos.findIndex((todo) => todo.id === id);\n        if (index >= 0) draft.todos.splice(index, 1);\n      });\n    },\n    [setDraft],\n  );\n};\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nexport const useDeleteTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id: number) => {\n      setDraft((draft) => {\n        const index = draft.todos.findIndex((todo) => todo.id === id);\n        if (index >= 0) draft.todos.splice(index, 1);\n      });\n    },\n    [setDraft],\n  );\n};\n\n")))),(0,r.kt)("p",null,"This is a custom hook to return ",(0,r.kt)("inlineCode",{parentName:"p"},"deleteTodo")," function."),(0,r.kt)("h2",{id:"srchooksusetoogletodojs"},"src/hooks/useToogleTodo.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nexport const useToggleTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id) => {\n      setDraft((draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        if (todo) todo.completed = !todo.completed;\n      });\n    },\n    [setDraft],\n  );\n};\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useCallback } from 'react';\n\nimport { useSetDraft } from '../store';\n\nexport const useToggleTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id: number) => {\n      setDraft((draft) => {\n        const todo = draft.todos.find((todo) => todo.id === id);\n        if (todo) todo.completed = !todo.completed;\n      });\n    },\n    [setDraft],\n  );\n};\n\n")))),(0,r.kt)("p",null,"This is a custom hook to return ",(0,r.kt)("inlineCode",{parentName:"p"},"toggleTodo")," function."),(0,r.kt)("h2",{id:"srchooksusequeryjs"},"src/hooks/useQuery.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useCallback } from 'react';\n\nimport { useTrackedState, useSetDraft } from '../store';\n\nexport const useQuery = () => {\n  const state = useTrackedState();\n  const getQuery = () => state.query;\n  const setDraft = useSetDraft();\n  const setQuery = useCallback(\n    (query) => {\n      setDraft((draft) => {\n        draft.query = query;\n      });\n    },\n    [setDraft],\n  );\n  return { getQuery, setQuery };\n};\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useCallback } from 'react';\n\nimport { useTrackedState, useSetDraft } from '../store';\n\nexport const useQuery = () => {\n  const state = useTrackedState();\n  const getQuery = () => state.query;\n  const setDraft = useSetDraft();\n  const setQuery = useCallback(\n    (query: string) => {\n      setDraft((draft) => {\n        draft.query = query;\n      });\n    },\n    [setDraft],\n  );\n  return { getQuery, setQuery };\n};\n\n")))),(0,r.kt)("p",null,"This is a custom hook to return getQuery and setQuery.\nIt doesn't return ",(0,r.kt)("inlineCode",{parentName:"p"},"state.query")," directly, because\nit will be used conditionally."),(0,r.kt)("h2",{id:"srccomponentstodolistjs"},"src/components/TodoList.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import React from 'react';\n\nimport { useTodoList } from '../hooks/useTodoList';\nimport { useQuery } from '../hooks/useQuery';\nimport TodoItem from './TodoItem';\nimport NewTodo from './NewTodo';\n\nconst TodoList = () => {\n  const { getQuery, setQuery } = useQuery();\n  const todos = useTodoList();\n  return (\n    <div>\n      <ul>\n        {todos.map(({ id, title, completed }) => (\n          <TodoItem key={id} id={id} title={title} completed={completed} />\n        ))}\n        <NewTodo />\n      </ul>\n      <div>\n        Highlight Query for incomplete items:\n        <input value={getQuery()} onChange={(e) => setQuery(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react';\n\nimport { useTodoList } from '../hooks/useTodoList';\nimport { useQuery } from '../hooks/useQuery';\nimport TodoItem from './TodoItem';\nimport NewTodo from './NewTodo';\n\nconst TodoList: React.FC = () => {\n  const { getQuery, setQuery } = useQuery();\n  const todos = useTodoList();\n  return (\n    <div>\n      <ul>\n        {todos.map(({ id, title, completed }) => (\n          <TodoItem key={id} id={id} title={title} completed={completed} />\n        ))}\n        <NewTodo />\n      </ul>\n      <div>\n        Highlight Query for incomplete items:\n        <input value={getQuery()} onChange={(e) => setQuery(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n\n")))),(0,r.kt)("p",null,"This component is to show the list of ",(0,r.kt)("inlineCode",{parentName:"p"},"TodoItem"),"s,\n",(0,r.kt)("inlineCode",{parentName:"p"},"NewTodo")," to create a new item, and\nClear button to reset notes in all items."),(0,r.kt)("h2",{id:"srccomponentstodoitemjs"},"src/components/TodoItem.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import React from 'react';\n\nimport { useQuery } from '../hooks/useQuery';\nimport { useDeleteTodo } from '../hooks/useDeleteTodo';\nimport { useToggleTodo } from '../hooks/useToggleTodo';\nimport { useFlasher } from '../utils';\n\nconst renderHighlight = (title, query) => {\n  if (!query) return title;\n  const index = title.indexOf(query);\n  if (index === -1) return title;\n  return (\n    <>\n      {title.slice(0, index)}\n      <b>{query}</b>\n      {title.slice(index + query.length)}\n    </>\n  );\n};\n\nconst TodoItem = ({ id, title, completed }) => {\n  const { getQuery } = useQuery();\n  const deleteTodo = useDeleteTodo();\n  const toggleTodo = useToggleTodo();\n  return (\n    <li ref={useFlasher()}>\n      <input\n        type=\"checkbox\"\n        checked={!!completed}\n        onChange={() => toggleTodo(id)}\n      />\n      <span\n        style={{\n          textDecoration: completed ? 'line-through' : 'none',\n        }}\n      >\n        {completed ? title : renderHighlight(title, getQuery())}\n      </span>\n      <button onClick={() => deleteTodo(id)}>Delete</button>\n    </li>\n  );\n};\n\nexport default React.memo(TodoItem);\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react';\n\nimport { useQuery } from '../hooks/useQuery';\nimport { useDeleteTodo } from '../hooks/useDeleteTodo';\nimport { useToggleTodo } from '../hooks/useToggleTodo';\nimport { useFlasher } from '../utils';\n\nconst renderHighlight = (title, query) => {\n  if (!query) return title;\n  const index = title.indexOf(query);\n  if (index === -1) return title;\n  return (\n    <>\n      {title.slice(0, index)}\n      <b>{query}</b>\n      {title.slice(index + query.length)}\n    </>\n  );\n};\n\ntype Props = {\n  id: number;\n  title: string;\n  completed?: boolean;\n};\n\nconst TodoItem: React.FC<Props> = ({ id, title, completed }) => {\n  const { getQuery } = useQuery();\n  const deleteTodo = useDeleteTodo();\n  const toggleTodo = useToggleTodo();\n  return (\n    <li ref={useFlasher()}>\n      <input\n        type=\"checkbox\"\n        checked={!!completed}\n        onChange={() => toggleTodo(id)}\n      />\n      <span\n        style={{\n          textDecoration: completed ? 'line-through' : 'none',\n        }}\n      >\n        {completed ? title : renderHighlight(title, getQuery())}\n      </span>\n      <button onClick={() => deleteTodo(id)}>Delete</button>\n    </li>\n  );\n};\n\nexport default React.memo(TodoItem);\n\n")))),(0,r.kt)("p",null,"This is the TodoItem component.\nWe prefer primitive props for memoized components."),(0,r.kt)("p",null,"If you want to use object props for memoized components,\nyou need to use a special ",(0,r.kt)("a",{parentName:"p",href:"./api#memo"},"memo")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"React.memo"),".\nSee ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/dai-shi/react-tracked/tree/main/examples/09_reactmemo"},"example/09")," for the usage."),(0,r.kt)("h2",{id:"srccomponentsnewtodojs"},"src/components/NewTodo.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import React, { useState } from 'react';\n\nimport { useAddTodo } from '../hooks/useAddTodo';\nimport { useFlasher } from '../utils';\n\nconst NewTodo = () => {\n  const addTodo = useAddTodo();\n  const [text, setText] = useState('');\n  return (\n    <li ref={useFlasher()}>\n      <input\n        value={text}\n        placeholder=\"Enter title...\"\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          addTodo(text);\n          setText('');\n        }}\n      >\n        Add\n      </button>\n    </li>\n  );\n};\n\nexport default React.memo(NewTodo);\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import React, { useState } from 'react';\n\nimport { useAddTodo } from '../hooks/useAddTodo';\nimport { useFlasher } from '../utils';\n\nconst NewTodo: React.FC = () => {\n  const addTodo = useAddTodo();\n  const [text, setText] = useState('');\n  return (\n    <li ref={useFlasher()}>\n      <input\n        value={text}\n        placeholder=\"Enter title...\"\n        onChange={(e) => setText(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          addTodo(text);\n          setText('');\n        }}\n      >\n        Add\n      </button>\n    </li>\n  );\n};\n\nexport default React.memo(NewTodo);\n\n")))),(0,r.kt)("p",null,"This is the NewTodo component to create a new item.\nIt uses a local state for the text field."),(0,r.kt)("h2",{id:"srcutilsjs"},"src/utils.js"),(0,r.kt)(a.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(l.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useRef, useEffect } from 'react';\n\nexport const useFlasher = () => {\n  const ref = useRef(null);\n  useEffect(() => {\n    if (!ref.current) return;\n    ref.current.setAttribute(\n      'style',\n      'box-shadow: 0 0 2px 1px red; transition: box-shadow 100ms ease-out;',\n    );\n    setTimeout(() => {\n      if (!ref.current) return;\n      ref.current.setAttribute('style', '');\n    }, 300);\n  });\n  return ref;\n};\n\n"))),(0,r.kt)(l.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useRef, useEffect } from 'react';\n\nexport const useFlasher = () => {\n  const ref = useRef<HTMLLIElement>(null);\n  useEffect(() => {\n    if (!ref.current) return;\n    ref.current.setAttribute(\n      'style',\n      'box-shadow: 0 0 2px 1px red; transition: box-shadow 100ms ease-out;',\n    );\n    setTimeout(() => {\n      if (!ref.current) return;\n      ref.current.setAttribute('style', '');\n    }, 300);\n  });\n  return ref;\n};\n\n")))),(0,r.kt)("p",null,"This is a util function to show which components render."),(0,r.kt)("h2",{id:"codesandbox"},"CodeSandbox"),(0,r.kt)("p",null,"You can try ",(0,r.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/infallible-firefly-yzwxc"},"working example"),"."))}T.isMDXComponent=!0}}]);