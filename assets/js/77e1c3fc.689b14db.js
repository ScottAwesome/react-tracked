"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[710],{8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,s=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:s},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(7462),s=n(7294),r=n(2389),o=n(9443);var i=function(){var e=(0,s.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(9521),u=n(6010),m="tabItem_1uMI";function c(e){var t,n,a,r=e.lazy,o=e.block,c=e.defaultValue,d=e.values,N=e.groupId,p=e.className,v=s.Children.map(e.children,(function(e){if((0,s.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=d?d:v.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),h=(0,l.lx)(f,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===c?c:null!=(t=null!=c?c:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=v[0])?void 0:a.props.value;if(null!==k&&!f.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=i(),S=y.tabGroupChoices,b=y.setTabGroupChoices,g=(0,s.useState)(k),T=g[0],F=g[1],w=[],P=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=N){var C=S[N];null!=C&&C!==T&&f.some((function(e){return e.value===C}))&&F(C)}var x=function(e){var t=e.currentTarget,n=w.indexOf(t),a=f[n].value;a!==T&&(P(t),F(a),null!=N&&b(N,a))},E=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=w.indexOf(e.currentTarget)+1;n=w[a]||w[0];break;case"ArrowLeft":var s=w.indexOf(e.currentTarget)-1;n=w[s]||w[w.length-1]}null==(t=n)||t.focus()};return s.createElement("div",{className:"tabs-container"},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":o},p)},f.map((function(e){var t=e.value,n=e.label;return s.createElement("li",{role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,className:(0,u.Z)("tabs__item",m,{"tabs__item--active":T===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:E,onFocus:x,onClick:x},null!=n?n:t)}))),r?(0,s.cloneElement)(v.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):s.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function d(e){var t=(0,r.Z)();return s.createElement(c,(0,a.Z)({key:String(t)},e))}},5007:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return m},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var a=n(7462),s=n(3366),r=(n(7294),n(3905)),o=n(6396),i=n(8215),l=["components"],u={id:"tutorial-zustand-01",title:"Tutorial with zustand - Person Name",sidebar_label:"Person Name (zustand)"},m=void 0,c={unversionedId:"tutorial-zustand-01",id:"tutorial-zustand-01",isDocsHomePage:!1,title:"Tutorial with zustand - Person Name",description:"This tutorial shows tiny example code with zustand.",source:"@site/docs/tutorial-zustand-01.md",sourceDirName:".",slug:"/tutorial-zustand-01",permalink:"/docs/tutorial-zustand-01",tags:[],version:"current",frontMatter:{id:"tutorial-zustand-01",title:"Tutorial with zustand - Person Name",sidebar_label:"Person Name (zustand)"},sidebar:"docs",previous:{title:"Person Name (redux)",permalink:"/docs/tutorial-redux-01"},next:{title:"API",permalink:"/docs/api"}},d=[{value:"With useStore",id:"with-usestore",children:[],level:2},{value:"With useTrackedStore",id:"with-usetrackedstore",children:[],level:2}],N={toc:d};function p(e){var t=e.components,n=(0,s.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This tutorial shows tiny example code with zustand.\nThere are two variants.\nThe first one is with useStore.\nThe second one is with useTrackedStore."),(0,r.kt)("h2",{id:"with-usestore"},"With useStore"),(0,r.kt)(o.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(i.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import * as React from 'react';\nimport { useState } from 'react';\nimport create from 'zustand';\n\nconst useStore = create((set) => ({\n  firstName: 'React',\n  lastName: 'Tracked',\n  setFirstName: (firstName) => set({ firstName }),\n  setLastName: (lastName) => set({ lastName }),\n}));\n\nconst EditPerson = () => {\n  const firstName = useStore((state) => state.firstName);\n  const lastName = useStore((state) => state.lastName);\n  const setFirstName = useStore((state) => state.setFirstName);\n  const setLastName = useStore((state) => state.setLastName);\n  return (\n    <div>\n      <div>\n        First Name:\n        <input\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n      </div>\n      <div>\n        Last Name:\n        <input value={lastName} onChange={(e) => setLastName(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nconst ShowPerson = () => {\n  const [onlyFirstName, setOnlyFirstName] = useState(false);\n  const firstName = useStore((state) => state.firstName);\n  const lastName = useStore((state) => (onlyFirstName ? null : state.lastName));\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setOnlyFirstName((s) => !s)}>\n        {onlyFirstName ? 'Showing only first name' : 'Showing full name'}\n      </button>\n      {onlyFirstName ? (\n        <div>First Name: {firstName}</div>\n      ) : (\n        <div>\n          Full Name: {firstName} {lastName}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <>\n      <EditPerson />\n      <ShowPerson />\n    </>\n  );\n};\n\nexport default App;\n\n"))),(0,r.kt)(i.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as React from 'react';\nimport { useState } from 'react';\nimport create from 'zustand';\n\ntype State = {\n  firstName: string;\n  lastName: string;\n  setFirstName: (firstName: string) => void;\n  setLastName: (lastName: string) => void;\n};\n\nconst useStore = create<State>((set) => ({\n  firstName: 'React',\n  lastName: 'Tracked',\n  setFirstName: (firstName) => set({ firstName }),\n  setLastName: (lastName) => set({ lastName }),\n}));\n\nconst EditPerson: React.FC = () => {\n  const firstName = useStore((state) => state.firstName);\n  const lastName = useStore((state) => state.lastName);\n  const setFirstName = useStore((state) => state.setFirstName);\n  const setLastName = useStore((state) => state.setLastName);\n  return (\n    <div>\n      <div>\n        First Name:\n        <input\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n      </div>\n      <div>\n        Last Name:\n        <input value={lastName} onChange={(e) => setLastName(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nconst ShowPerson: React.FC = () => {\n  const [onlyFirstName, setOnlyFirstName] = useState(false);\n  const firstName = useStore((state) => state.firstName);\n  const lastName = useStore((state) => (onlyFirstName ? null : state.lastName));\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setOnlyFirstName((s) => !s)}>\n        {onlyFirstName ? 'Showing only first name' : 'Showing full name'}\n      </button>\n      {onlyFirstName ? (\n        <div>First Name: {firstName}</div>\n      ) : (\n        <div>\n          Full Name: {firstName} {lastName}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <EditPerson />\n      <ShowPerson />\n    </>\n  );\n};\n\nexport default App;\n\n")))),(0,r.kt)("p",null,"It's a bit tricky to make a selector conditional."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/react-typescript-forked-y9bqu"},"CodeSandbox")),(0,r.kt)("h2",{id:"with-usetrackedstore"},"With useTrackedStore"),(0,r.kt)(o.Z,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"TabsUsedByRemarkPluginTs2Js"},(0,r.kt)(i.Z,{value:"js",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import * as React from 'react';\nimport { useState } from 'react';\nimport create from 'zustand';\nimport { createTrackedSelector } from 'react-tracked';\n\nconst useStore = create((set) => ({\n  firstName: 'React',\n  lastName: 'Tracked',\n  setFirstName: (firstName) => set({ firstName }),\n  setLastName: (lastName) => set({ lastName }),\n}));\n\nconst useTrackedStore = createTrackedSelector(useStore);\n\nconst EditPerson = () => {\n  const state = useTrackedStore();\n  return (\n    <div>\n      <div>\n        First Name:\n        <input\n          value={state.firstName}\n          onChange={(e) => state.setFirstName(e.target.value)}\n        />\n      </div>\n      <div>\n        Last Name:\n        <input\n          value={state.lastName}\n          onChange={(e) => state.setLastName(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst ShowPerson = () => {\n  const state = useTrackedStore();\n  const [onlyFirstName, setOnlyFirstName] = useState(false);\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setOnlyFirstName((s) => !s)}>\n        {onlyFirstName ? 'Showing only first name' : 'Showing full name'}\n      </button>\n      {onlyFirstName ? (\n        <div>First Name: {state.firstName}</div>\n      ) : (\n        <div>\n          Full Name: {state.firstName} {state.lastName}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <>\n      <EditPerson />\n      <ShowPerson />\n    </>\n  );\n};\n\nexport default App;\n\n"))),(0,r.kt)(i.Z,{value:"ts",mdxType:"TabItemUsedByRemarkPluginTs2Js"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as React from 'react';\nimport { useState } from 'react';\nimport create from 'zustand';\nimport { createTrackedSelector } from 'react-tracked';\n\ntype State = {\n  firstName: string;\n  lastName: string;\n  setFirstName: (firstName: string) => void;\n  setLastName: (lastName: string) => void;\n};\n\nconst useStore = create<State>((set) => ({\n  firstName: 'React',\n  lastName: 'Tracked',\n  setFirstName: (firstName) => set({ firstName }),\n  setLastName: (lastName) => set({ lastName }),\n}));\n\nconst useTrackedStore = createTrackedSelector(useStore);\n\nconst EditPerson: React.FC = () => {\n  const state = useTrackedStore();\n  return (\n    <div>\n      <div>\n        First Name:\n        <input\n          value={state.firstName}\n          onChange={(e) => state.setFirstName(e.target.value)}\n        />\n      </div>\n      <div>\n        Last Name:\n        <input\n          value={state.lastName}\n          onChange={(e) => state.setLastName(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst ShowPerson: React.FC = () => {\n  const state = useTrackedStore();\n  const [onlyFirstName, setOnlyFirstName] = useState(false);\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setOnlyFirstName((s) => !s)}>\n        {onlyFirstName ? 'Showing only first name' : 'Showing full name'}\n      </button>\n      {onlyFirstName ? (\n        <div>First Name: {state.firstName}</div>\n      ) : (\n        <div>\n          Full Name: {state.firstName} {state.lastName}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <EditPerson />\n      <ShowPerson />\n    </>\n  );\n};\n\nexport default App;\n\n")))),(0,r.kt)("p",null,"This works just the same without the tricky selector."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/react-typescript-forked-drjcl"},"CodeSandbox")))}p.isMDXComponent=!0}}]);