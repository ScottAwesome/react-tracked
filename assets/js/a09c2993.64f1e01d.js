"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[128],{8495:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return p}});var r=n(7462),o=n(3366),s=(n(7294),n(3905)),a=["components"],i={id:"introduction",title:"Introduction",sidebar_label:"Introduction"},c=void 0,u={unversionedId:"introduction",id:"introduction",isDocsHomePage:!1,title:"Introduction",description:"Preventing re-renders is one of performance issues in React.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",tags:[],version:"current",frontMatter:{id:"introduction",title:"Introduction",sidebar_label:"Introduction"},sidebar:"docs",next:{title:"Quick Start",permalink:"/docs/quick-start"}},l=[],d={toc:l};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Preventing re-renders is one of performance issues in React.\nSmaller apps wouldn't usually suffer from such a performance issue,\nbut once apps have a central global state that would be used in\nmany components. The performance issue would become a problem.\nFor example, Redux is usually used for a single global state,\nand React-Redux provides a selector interface to solve the performance issue.\nSelectors are useful to structure state accessor,\nhowever, using selectors only for performance wouldn't be the best fit.\nSelectors for performance require understanding object reference\nequality which is non-trival for beginners and\nexperts would still have difficulties for complex structures."),(0,s.kt)("p",null,'React Tracked is a library to provide so-called "state usage tracking."\nIt\'s a technique to track property access of a state object,\nand only triggers re-renders if the accessed property is changed.\nTechnically, it uses Proxies underneath, and it works not only for\nthe root level of the object but also for deep nested objects.'),(0,s.kt)("p",null,"Prior to v1.6.0, React Tracked is a library to replace React Context\nuse cases for global state. React hook useContext triggers re-renders\nwhenever a small part of state object is changed, and it would cause\nperformance issues pretty easily. React Tracked provides an API\nthat is very similar to useContext-style global state."),(0,s.kt)("p",null,'Since v1.6.0, it provides another building-block API\nwhich is capable to create a "state usage tracking" hooks\nfrom any selector interface hooks.\nIt can be used with React-Redux useSelector, and any other libraries\nthat provide useSelector-like hooks.'))}p.isMDXComponent=!0}}]);